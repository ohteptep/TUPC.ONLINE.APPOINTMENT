# Generated by Django 3.0.5 on 2022-05-01 13:18

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Department', models.CharField(max_length=200, null=True)),
                ('Depass', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Semail', models.EmailField(max_length=200, null=True)),
                ('Spass', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AlumniBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Aname', models.CharField(max_length=200, null=True)),
                ('Alast', models.CharField(max_length=200, null=True)),
                ('Amail', models.EmailField(max_length=200, null=True)),
                ('Asid', models.CharField(max_length=12, null=True)),
                ('Acourse', models.CharField(max_length=200, null=True)),
                ('Ayg', models.CharField(max_length=200, null=True)),
                ('Adate', models.CharField(max_length=200, null=True)),
                ('Adep', models.CharField(max_length=200, null=True)),
                ('Apurp', models.CharField(max_length=200, null=True)),
                ('status', models.CharField(default='Inbox', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='GuardianBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ggname', models.CharField(max_length=200, null=True)),
                ('Gname', models.CharField(max_length=200, null=True)),
                ('Glast', models.CharField(max_length=200, null=True)),
                ('Gmail', models.EmailField(max_length=200, null=True)),
                ('Gsid', models.CharField(max_length=12, null=True)),
                ('Gcourse', models.CharField(max_length=200, null=True)),
                ('Gdate', models.CharField(max_length=200, null=True)),
                ('Gdep', models.CharField(max_length=200, null=True)),
                ('Gpurp', models.CharField(max_length=200, null=True)),
                ('status', models.CharField(default='Inbox', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='securitybook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=200, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('last', models.CharField(max_length=200, null=True)),
                ('date', models.CharField(max_length=200, null=True)),
                ('dep', models.EmailField(max_length=200, null=True)),
                ('purp', models.CharField(max_length=12, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sname', models.CharField(max_length=200, null=True)),
                ('Slast', models.CharField(max_length=200, null=True)),
                ('Smail', models.EmailField(max_length=200, null=True)),
                ('Ssid', models.CharField(max_length=12, null=True)),
                ('Scourse', models.CharField(max_length=200, null=True)),
                ('Syear', models.CharField(max_length=200, null=True)),
                ('Sdate', models.CharField(max_length=200, null=True)),
                ('Sdep', models.CharField(max_length=200, null=True)),
                ('Spurp', models.CharField(max_length=200, null=True)),
                ('status', models.CharField(default='Inbox', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='regacc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Department', models.CharField(choices=[('OAA', 'Office of Academic Affairs'), ('OCR', 'Office of Campus Registrar'), ('OGS', 'Office of the Guidance Services'), ('CL', 'Campus Library'), ('OHS', 'Office of Health Services'), ('UITC', 'University Information Technology Center'), ('USG', 'University Student Government'), ('OSA', 'Office of Student Affairs'), ('AO', 'Alumni Office'), ('SD', 'Security Department')], max_length=200, verbose_name='Department')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
